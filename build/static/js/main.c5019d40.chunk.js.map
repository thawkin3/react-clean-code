{"version":3,"sources":["components/01-conditional-rendering-bad.js","components/01-conditional-rendering-good.js","components/02-conditional-rendering-bad.js","components/02-conditional-rendering-good.js","components/03-boolean-props-bad.js","components/03-boolean-props-good.js","components/04-string-prop-values-bad.js","components/04-string-prop-values-good.js","components/05-unnecessary-anonymous-functions-bad.js","components/05-unnecessary-anonymous-functions-good.js","components/06-unnecessary-anonymous-function-components-bad.js","components/06-unnecessary-anonymous-function-components-good.js","components/07-undefined-props-bad.js","components/07-undefined-props-good.js","components/08-previous-state-bad.js","components/08-previous-state-good.js","App.js","index.js"],"names":["ConditionalRenderingWhenTrueBad","useState","showConditionalText","setShowConditionalText","onClick","ConditionalRenderingWhenTrueGood","ConditionalRenderingBad","showConditionOneText","setShowConditionOneText","ConditionalRenderingGood","HungryMessage","isHungry","BooleanPropBad","BooleanPropGood","Greeting","personName","StringPropValuesBad","StringPropValuesGood","UnnecessaryAnonymousFunctionsBad","inputValue","setInputValue","htmlFor","id","value","onChange","e","target","handleChange","UnnecessaryAnonymousFunctionsGood","CircleIcon","height","width","cx","cy","r","stroke","stroke-width","fill","ComponentThatAcceptsAnIcon","IconComponent","UnnecessaryAnonymousFunctionComponentsBad","UnnecessaryAnonymousFunctionComponentsGood","ButtonOne","handleClick","undefined","ButtonTwo","UndefinedPropsBad","alert","UndefinedPropsGood","PreviousStateBad","isDisabled","setIsDisabled","toggleButton","disabled","i","PreviousStateGood","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5019d40.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nexport const ConditionalRenderingWhenTrueBad = () => {\n  const [showConditionalText, setShowConditionalText] = useState(false)\n\n  const handleClick = () =>\n    setShowConditionalText(showConditionalText => !showConditionalText)\n\n  return (\n    <div>\n      <button onClick={handleClick}>Toggle the text</button>\n      {showConditionalText ? <p>The condition must be true!</p> : null}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport const ConditionalRenderingWhenTrueGood = () => {\n  const [showConditionalText, setShowConditionalText] = useState(false)\n\n  const handleClick = () =>\n    setShowConditionalText(showConditionalText => !showConditionalText)\n\n  return (\n    <div>\n      <button onClick={handleClick}>Toggle the text</button>\n      {showConditionalText && <p>The condition must be true!</p>}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport const ConditionalRenderingBad = () => {\n  const [showConditionOneText, setShowConditionOneText] = useState(false)\n\n  const handleClick = () =>\n    setShowConditionOneText(showConditionOneText => !showConditionOneText)\n\n  return (\n    <div>\n      <button onClick={handleClick}>Toggle the text</button>\n      {showConditionOneText && <p>The condition must be true!</p>}\n      {!showConditionOneText && <p>The condition must be false!</p>}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport const ConditionalRenderingGood = () => {\n  const [showConditionOneText, setShowConditionOneText] = useState(false)\n\n  const handleClick = () =>\n    setShowConditionOneText(showConditionOneText => !showConditionOneText)\n\n  return (\n    <div>\n      <button onClick={handleClick}>Toggle the text</button>\n      {showConditionOneText ? (\n        <p>The condition must be true!</p>\n      ) : (\n        <p>The condition must be false!</p>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\n\nconst HungryMessage = ({ isHungry }) => (\n  <span>{isHungry ? 'I am hungry' : 'I am full'}</span>\n)\n\nexport const BooleanPropBad = () => (\n  <div>\n    <span>\n      <b>This person is hungry: </b>\n    </span>\n    <HungryMessage isHungry={true} />\n    <br />\n    <span>\n      <b>This person is full: </b>\n    </span>\n    <HungryMessage isHungry={false} />\n  </div>\n)\n","import React from 'react'\n\nconst HungryMessage = ({ isHungry }) => (\n  <span>{isHungry ? 'I am hungry' : 'I am full'}</span>\n)\n\nexport const BooleanPropGood = () => (\n  <div>\n    <span>\n      <b>This person is hungry: </b>\n    </span>\n    <HungryMessage isHungry />\n    <br />\n    <span>\n      <b>This person is full: </b>\n    </span>\n    <HungryMessage isHungry={false} />\n  </div>\n)\n","import React from 'react'\n\nconst Greeting = ({ personName }) => <p>Hi, {personName}!</p>\n\nexport const StringPropValuesBad = () => (\n  <div>\n    <Greeting personName={'John'} />\n    <Greeting personName={'Matt'} />\n    <Greeting personName={`Paul`} />\n  </div>\n)\n","import React from 'react'\n\nconst Greeting = ({ personName }) => <p>Hi, {personName}!</p>\n\nexport const StringPropValuesGood = () => (\n  <div>\n    <Greeting personName=\"John\" />\n    <Greeting personName=\"Matt\" />\n    <Greeting personName=\"Paul\" />\n  </div>\n)\n","import React, { useState } from 'react'\n\nexport const UnnecessaryAnonymousFunctionsBad = () => {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleChange = e => {\n    setInputValue(e.target.value)\n  }\n\n  return (\n    <>\n      <label htmlFor=\"name\">Name: </label>\n      <input id=\"name\" value={inputValue} onChange={e => handleChange(e)} />\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nexport const UnnecessaryAnonymousFunctionsGood = () => {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleChange = e => {\n    setInputValue(e.target.value)\n  }\n\n  return (\n    <>\n      <label htmlFor=\"name\">Name: </label>\n      <input id=\"name\" value={inputValue} onChange={handleChange} />\n    </>\n  )\n}\n","import React from 'react'\n\nconst CircleIcon = () => (\n  <svg height=\"100\" width=\"100\">\n    <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\n  </svg>\n)\n\nconst ComponentThatAcceptsAnIcon = ({ IconComponent }) => (\n  <div>\n    <p>Below is the icon component prop I was given:</p>\n    <IconComponent />\n  </div>\n)\n\nexport const UnnecessaryAnonymousFunctionComponentsBad = () => (\n  <ComponentThatAcceptsAnIcon IconComponent={() => <CircleIcon />} />\n)\n","import React from 'react'\n\nconst CircleIcon = () => (\n  <svg height=\"100\" width=\"100\">\n    <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\n  </svg>\n)\n\nconst ComponentThatAcceptsAnIcon = ({ IconComponent }) => (\n  <div>\n    <p>Below is the icon component prop I was given:</p>\n    <IconComponent />\n  </div>\n)\n\nexport const UnnecessaryAnonymousFunctionComponentsGood = () => (\n  <ComponentThatAcceptsAnIcon IconComponent={CircleIcon} />\n)\n","import React from 'react'\n\nconst ButtonOne = ({ handleClick }) => (\n  <button onClick={handleClick || undefined}>Click me</button>\n)\n\nconst ButtonTwo = ({ handleClick }) => {\n  const noop = () => {}\n\n  return <button onClick={handleClick || noop}>Click me</button>\n}\n\nexport const UndefinedPropsBad = () => (\n  <div>\n    <ButtonOne />\n    <ButtonOne handleClick={() => alert('Clicked!')} />\n    <ButtonTwo />\n    <ButtonTwo handleClick={() => alert('Clicked!')} />\n  </div>\n)\n","import React from 'react'\n\nconst ButtonOne = ({ handleClick }) => (\n  <button onClick={handleClick}>Click me</button>\n)\n\nexport const UndefinedPropsGood = () => (\n  <div>\n    <ButtonOne />\n    <ButtonOne handleClick={() => alert('Clicked!')} />\n  </div>\n)\n","import React, { useState } from 'react'\n\nexport const PreviousStateBad = () => {\n  const [isDisabled, setIsDisabled] = useState(false)\n\n  const toggleButton = () => setIsDisabled(!isDisabled)\n\n  const toggleButton2Times = () => {\n    for (let i = 0; i < 2; i++) {\n      toggleButton()\n    }\n  }\n\n  return (\n    <div>\n      <button disabled={isDisabled}>\n        I'm {isDisabled ? 'disabled' : 'enabled'}\n      </button>\n      <button onClick={toggleButton}>Toggle button state</button>\n      <button onClick={toggleButton2Times}>Toggle button state 2 times</button>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nexport const PreviousStateGood = () => {\n  const [isDisabled, setIsDisabled] = useState(false)\n\n  const toggleButton = () => setIsDisabled(isDisabled => !isDisabled)\n\n  const toggleButton2Times = () => {\n    for (let i = 0; i < 2; i++) {\n      toggleButton()\n    }\n  }\n\n  return (\n    <div>\n      <button disabled={isDisabled}>\n        I'm {isDisabled ? 'disabled' : 'enabled'}\n      </button>\n      <button onClick={toggleButton}>Toggle button state</button>\n      <button onClick={toggleButton2Times}>Toggle button state 2 times</button>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ConditionalRenderingWhenTrueBad } from './components/01-conditional-rendering-bad'\nimport { ConditionalRenderingWhenTrueGood } from './components/01-conditional-rendering-good'\nimport { ConditionalRenderingBad } from './components/02-conditional-rendering-bad'\nimport { ConditionalRenderingGood } from './components/02-conditional-rendering-good'\nimport { BooleanPropBad } from './components/03-boolean-props-bad'\nimport { BooleanPropGood } from './components/03-boolean-props-good'\nimport { StringPropValuesBad } from './components/04-string-prop-values-bad'\nimport { StringPropValuesGood } from './components/04-string-prop-values-good'\nimport { UnnecessaryAnonymousFunctionsBad } from './components/05-unnecessary-anonymous-functions-bad'\nimport { UnnecessaryAnonymousFunctionsGood } from './components/05-unnecessary-anonymous-functions-good'\nimport { UnnecessaryAnonymousFunctionComponentsBad } from './components/06-unnecessary-anonymous-function-components-bad'\nimport { UnnecessaryAnonymousFunctionComponentsGood } from './components/06-unnecessary-anonymous-function-components-good'\nimport { UndefinedPropsBad } from './components/07-undefined-props-bad'\nimport { UndefinedPropsGood } from './components/07-undefined-props-good'\nimport { PreviousStateBad } from './components/08-previous-state-bad'\nimport { PreviousStateGood } from './components/08-previous-state-good'\nimport './App.css'\n\nexport const App = () => (\n  <main>\n    <header>\n      <h1>React Clean Code</h1>\n    </header>\n\n    <section>\n      <h2>01. Conditional Rendering Only for One Condition</h2>\n      <h3 className=\"bad\">Bad</h3>\n      <ConditionalRenderingWhenTrueBad />\n      <br />\n      <h3 className=\"good\">Good</h3>\n      <ConditionalRenderingWhenTrueGood />\n    </section>\n    <hr />\n\n    <section>\n      <h2>02. Conditional Rendering on Either Condition</h2>\n      <h3 className=\"bad\">Bad</h3>\n      <ConditionalRenderingBad />\n      <br />\n      <h3 className=\"good\">Good</h3>\n      <ConditionalRenderingGood />\n    </section>\n    <hr />\n\n    <section>\n      <h2>03. Boolean Props</h2>\n      <h3 className=\"bad\">Bad</h3>\n      <BooleanPropBad />\n      <br />\n      <h3 className=\"good\">Good</h3>\n      <BooleanPropGood />\n    </section>\n    <hr />\n\n    <section>\n      <h2>04. String Prop Values</h2>\n      <h3 className=\"bad\">Bad</h3>\n      <StringPropValuesBad />\n      <br />\n      <h3 className=\"good\">Good</h3>\n      <StringPropValuesGood />\n    </section>\n    <hr />\n\n    <section>\n      <h2>05. Unnecessary Anonymous Functions</h2>\n      <h3 className=\"bad\">Bad</h3>\n      <UnnecessaryAnonymousFunctionsBad />\n      <br />\n      <br />\n      <h3 className=\"good\">Good</h3>\n      <UnnecessaryAnonymousFunctionsGood />\n    </section>\n    <hr />\n\n    <section>\n      <h2>06. Unnecessary Anonymous Function Components</h2>\n      <h3 className=\"bad\">Bad</h3>\n      <UnnecessaryAnonymousFunctionComponentsBad />\n      <br />\n      <h3 className=\"good\">Good</h3>\n      <UnnecessaryAnonymousFunctionComponentsGood />\n    </section>\n    <hr />\n\n    <section>\n      <h2>07. Undefined Props</h2>\n      <h3 className=\"bad\">Bad</h3>\n      <UndefinedPropsBad />\n      <br />\n      <h3 className=\"good\">Good</h3>\n      <UndefinedPropsGood />\n    </section>\n    <hr />\n\n    <section>\n      <h2>08. Setting State That Relies on the Previous State</h2>\n      <h3 className=\"bad\">Bad</h3>\n      <PreviousStateBad />\n      <br />\n      <h3 className=\"good\">Good</h3>\n      <PreviousStateGood />\n    </section>\n  </main>\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}